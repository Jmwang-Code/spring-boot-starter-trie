package com.cn.jmw.color;

/**
 * @author jmw
 * @Description TODO
 * @date 2023年04月19日 17:37
 * @Version 1.0
 */
public enum ColorEnum256 {
    NUMBER0(0,5)
    ,NUMBER1(1,5)
    ,NUMBER2(2,5)
    ,NUMBER3(3,5)
    ,NUMBER4(4,5)
    ,NUMBER5(5,5)
    ,NUMBER6(6,5)
    ,NUMBER7(7,5)
    ,NUMBER8(8,5)
    ,NUMBER9(9,5)
    ,NUMBER10(10,5)
    ,NUMBER11(11,5)
    ,NUMBER12(12,5)
    ,NUMBER13(13,5)
    ,NUMBER14(14,5)
    ,NUMBER15(15,5)
    ,NUMBER16(16,5)
    ,NUMBER17(17,5)
    ,NUMBER18(18,5)
    ,NUMBER19(19,5)
    ,NUMBER20(20,5)
    ,NUMBER21(21,5)
    ,NUMBER22(22,5)
    ,NUMBER23(23,5)
    ,NUMBER24(24,5)
    ,NUMBER25(25,5)
    ,NUMBER26(26,5)
    ,NUMBER27(27,5)
    ,NUMBER28(28,5)
    ,NUMBER29(29,5)
    ,NUMBER30(30,5)
    ,NUMBER31(31,5)
    ,NUMBER32(32,5)
    ,NUMBER33(33,5)
    ,NUMBER34(34,5)
    ,NUMBER35(35,5)
    ,NUMBER36(36,5)
    ,NUMBER37(37,5)
    ,NUMBER38(38,5)
//    ,NUMBER39(39,5)
//    ,NUMBER40(40,5)
//    ,NUMBER41(41,5)
//    ,NUMBER42(42,5)
//    ,NUMBER43(43,5)
//    ,NUMBER44(44,5)
    ,NUMBER45(45,5)
    ,NUMBER46(46,5)
    ,NUMBER47(47,5)
    ,NUMBER48(48,5)
    ,NUMBER49(49,5)
    ,NUMBER50(50,5)
    ,NUMBER51(51,5)
    ,NUMBER52(52,5)
    ,NUMBER53(53,5)
    ,NUMBER54(54,5)
    ,NUMBER55(55,5)
    ,NUMBER56(56,5)
    ,NUMBER57(57,5)
    ,NUMBER58(58,5)
    ,NUMBER59(59,5)
    ,NUMBER60(60,5)
    ,NUMBER61(61,5)
    ,NUMBER62(62,5)
    ,NUMBER63(63,5)
    ,NUMBER64(64,5)
    ,NUMBER65(65,5)
    ,NUMBER66(66,5)
    ,NUMBER67(67,5)
    ,NUMBER68(68,5)
    ,NUMBER69(69,5)
    ,NUMBER70(70,5)
    ,NUMBER71(71,5)
    ,NUMBER72(72,5)
    ,NUMBER73(73,5)
    ,NUMBER74(74,5)
//    ,NUMBER75(75,5)
//   ,NUMBER76(76,5)
//    ,NUMBER77(77,5)
//    ,NUMBER78(78,5)
//    ,NUMBER79(79,5)
//    ,NUMBER80(80,5)
    ,NUMBER81(81,5)
    ,NUMBER82(82,5)
    ,NUMBER83(83,5)
    ,NUMBER84(84,5)
    ,NUMBER85(85,5)
    ,NUMBER86(86,5)
    ,NUMBER87(87,5)
    ,NUMBER88(88,5)
    ,NUMBER89(89,5)
    ,NUMBER90(90,5)
    ,NUMBER91(91,5)
    ,NUMBER92(92,5)
    ,NUMBER93(93,5)
    ,NUMBER94(94,5)
    ,NUMBER95(95,5)
    ,NUMBER96(96,5)
    ,NUMBER97(97,5)
    ,NUMBER98(98,5)
    ,NUMBER99(99,5)
    ,NUMBER100(100,5)
    ,NUMBER101(101,5)
    ,NUMBER102(102,5)
    ,NUMBER103(103,5)
    ,NUMBER104(104,5)
//    ,NUMBER105(105,5)
//    ,NUMBER106(106,5)
//    ,NUMBER107(107,5)
//    ,NUMBER108(108,5)
//    ,NUMBER109(109,5)
//    ,NUMBER110(110,5)
//    ,NUMBER111(111,5)
//    ,NUMBER112(112,5)
//    ,NUMBER113(113,5)
//    ,NUMBER114(114,5)
//    ,NUMBER115(115,5)
//    ,NUMBER116(116,5)
//    ,NUMBER117(117,5)
    ,NUMBER118(118,5)
    ,NUMBER119(119,5)
    ,NUMBER120(120,5)
    ,NUMBER121(121,5)
    ,NUMBER122(122,5)
    ,NUMBER123(123,5)
    ,NUMBER124(124,5)
    ,NUMBER125(125,5)
    ,NUMBER126(126,5)
    ,NUMBER127(127,5)
    ,NUMBER128(128,5)
    ,NUMBER129(129,5)
    ,NUMBER130(130,5)
    ,NUMBER131(131,5)
    ,NUMBER132(132,5)
    ,NUMBER133(133,5)
    ,NUMBER134(134,5)
    ,NUMBER135(135,5)
    ,NUMBER136(136,5)
    ,NUMBER137(137,5)
    ,NUMBER138(138,5)
    ,NUMBER139(139,5)
    ,NUMBER140(140,5)
//    ,NUMBER141(141,5)
//    ,NUMBER142(142,5)
//    ,NUMBER143(143,5)
//    ,NUMBER144(144,5)
//    ,NUMBER145(145,5)
//    ,NUMBER146(146,5)
    ,NUMBER147(147,5)
    ,NUMBER148(148,5)
    ,NUMBER149(149,5)
    ,NUMBER150(150,5)
    ,NUMBER151(151,5)
    ,NUMBER152(152,5)
    ,NUMBER153(153,5)
    ,NUMBER154(154,5)
    ,NUMBER155(155,5)
    ,NUMBER156(156,5)
    ,NUMBER157(157,5)
    ,NUMBER158(158,5)
    ,NUMBER159(159,5)
    ,NUMBER160(160,5)
    ,NUMBER161(161,5)
    ,NUMBER162(162,5)
    ,NUMBER163(163,5)
    ,NUMBER164(164,5)
    ,NUMBER165(165,5)
    ,NUMBER166(166,5)
    ,NUMBER167(167,5)
    ,NUMBER168(168,5)
    ,NUMBER169(169,5)
    ,NUMBER170(170,5)
    ,NUMBER171(171,5)
    ,NUMBER172(172,5)
    ,NUMBER173(173,5)
    ,NUMBER174(174,5)
    ,NUMBER175(175,5)
    ,NUMBER176(176,5)
//    ,NUMBER177(177,5)
//    ,NUMBER178(178,5)
//    ,NUMBER179(179,5)
//    ,NUMBER180(180,5)
//    ,NUMBER181(181,5)
//   ,NUMBER182(182,5)
    ,NUMBER183(183,5)
    ,NUMBER184(184,5)
    ,NUMBER185(185,5)
    ,NUMBER186(186,5)
    ,NUMBER187(187,5)
    ,NUMBER188(188,5)
    ,NUMBER189(189,5)
    ,NUMBER190(190,5)
    ,NUMBER191(191,5)
    ,NUMBER192(192,5)
    ,NUMBER193(193,5)
    ,NUMBER194(194,5)
    ,NUMBER195(195,5)
    ,NUMBER196(196,5)
    ,NUMBER197(197,5)
    ,NUMBER198(198,5)
    ,NUMBER199(199,5)
    ,NUMBER200(200,5)
    ,NUMBER201(201,5)
    ,NUMBER202(202,5)
    ,NUMBER203(203,5)
    ,NUMBER204(204,5)
    ,NUMBER205(205,5)
    ,NUMBER206(206,5)
    ,NUMBER207(207,5)
    ,NUMBER208(208,5)
    ,NUMBER209(209,5)
    ,NUMBER210(210,5)
    ,NUMBER211(211,5)
    ,NUMBER212(212,5)
    ,NUMBER213(213,5)
    ,NUMBER214(214,5)
    ,NUMBER215(215,5)
    ,NUMBER216(216,5)
    ,NUMBER217(217,5)
    ,NUMBER218(218,5)
    ,NUMBER219(219,5)
    ,NUMBER220(220,5)
    ,NUMBER221(221,5)
    ,NUMBER222(222,5)
    ,NUMBER223(223,5)
    ,NUMBER224(224,5)
    ,NUMBER225(225,5)
    ,NUMBER226(226,5)
    ,NUMBER227(227,5)
    ,NUMBER228(228,5)
    ,NUMBER229(229,5)
    ,NUMBER230(230,5)
    ,NUMBER231(231,5)
    ,NUMBER232(232,5)
    ,NUMBER233(233,5)
    ,NUMBER234(234,5)
    ,NUMBER235(235,5)
    ,NUMBER236(236,5)
    ,NUMBER237(237,5)
    ,NUMBER238(238,5)
    ,NUMBER239(239,5)
    ,NUMBER240(240,5)
    ,NUMBER241(241,5)
    ,NUMBER242(242,5)
    ,NUMBER243(243,5)
    ,NUMBER244(244,5)
    ,NUMBER245(245,5)
    ,NUMBER246(246,5)
    ,NUMBER247(247,5)
//    ,NUMBER248(248,5)
//    ,NUMBER249(249,5)
//    ,NUMBER250(250,5)
    ,NUMBER251(251,5)
    ,NUMBER252(252,5)
    ,NUMBER253(253,5)
    ,NUMBER254(254,5)
    ,NUMBER255(255,5);

    ColorEnum256() {
    }

    private int color;
    private int fontType;

    ColorEnum256(int color, int fontType) {
        this.color = color;
        this.fontType = fontType;
    }

    public int getColor() {
        return color;
    }

    public int getFontType() {
        return fontType;
    }


    public String getColoredString(String content) {
        return "\u001b[48;5;" + this.color + "m " + content + "\u001b[0m";
    }

    public static ColorEnum256 getRandomColor256() {
        int i = (int) (Math.random() * 216);
        return ColorEnum256.values()[i];
    }

    public static void main(String[] args) {
//        for (int i = 0; i < 10000; i++) {
//            System.out.println(ColorEnum256.getRandomColor256().getColoredString("test"));
//        }
        for (int i = 0; i <= 16; i++) {
            for (int j = 1; j <= 15; j++) {
                int number = i * 15 + j;
                String str = String.format("%3d", number);
                System.out.print("\u001b[48;5;" + number + "m " + str + "\u001b[0m");
            }
            System.out.println();
        }
    }
}
